#PLot each bird with the 

#install.packages("ggmap")
#install.packages("ggsn")
#install.packages("viridis")
#install.packages("ggrepel")
library(ggmap)
library(ggsn)
library(viridis)
library(ggrepel)

sessionInfo() #The output is below showing the versions of R and rpackages used when this script was originally run:

#R version 4.3.3 (2024-02-29 ucrt)
#Platform: x86_64-w64-mingw32/x64 (64-bit)
#Running under: Windows 11 x64 (build 22000)

#Matrix products: default


#locale:
#[1] LC_COLLATE=English_United Kingdom.utf8  LC_CTYPE=English_United Kingdom.utf8   
#[3] LC_MONETARY=English_United Kingdom.utf8 LC_NUMERIC=C                           
#[5] LC_TIME=English_United Kingdom.utf8    

#time zone: Europe/London
#tzcode source: internal

#attached base packages:
#[1] stats     graphics  grDevices utils     datasets  methods   base     

#other attached packages:
#[1] ggrepel_0.9.3     viridis_0.6.4     viridisLite_0.4.2 ggmap_3.0.2       ggplot2_3.4.4    

#loaded via a namespace (and not attached):
#[1] gtable_0.3.3        dplyr_1.1.2         compiler_4.3.3      tidyselect_1.2.0    Rcpp_1.0.11        
#[6] stringr_1.5.0       bitops_1.0-7        gridExtra_2.3       tidyr_1.3.0         scales_1.2.1       
#[11] png_0.1-8           lattice_0.22-5      R6_2.5.1            plyr_1.8.8          generics_0.1.3     
#[16] tibble_3.2.1        RgoogleMaps_1.4.5.3 munsell_0.5.0       pillar_1.9.0        rlang_1.1.1        
#[21] utf8_1.2.3          sp_2.0-0            stringi_1.7.12      cli_3.6.1           withr_2.5.0        
#[26] magrittr_2.0.3      grid_4.3.3          rstudioapi_0.15.0   lifecycle_1.0.3     vctrs_0.6.3        
#[31] glue_1.6.2          fansi_1.0.4         colorspace_2.1-0    purrr_1.0.1         httr_1.4.6         
#[36] tools_4.3.3         jpeg_0.1-10         pkgconfig_2.0.3  

rm(list=ls())

dat <- read.csv("data_gannet_foraging_by_colony.csv")
head(dat)

bounds <- c(left = min(dat$Lon)-4, bottom = min(dat$Lat)-2.3,
                 right = max(dat$Lon)+4, top = max(dat$Lat)+0.7)

#new bounds spanning lat of gannet range
#bounds <- c(left = min(dat$Lon)-4, bottom = 46.83,
#            right = max(dat$Lon)+4, top = 74.21)


map <- get_stamenmap(bounds, zoom = 6, maptype = "toner-background", invert = T)

attr_map <- attr(map, "bb")    # save attributes from original

# change color in raster (white & grey)
map[map == "#FFFFFF"] <- "#cecece"  #if white, set to grey
map[map == "#000000"] <- "#FFFFFF"  #if black, set to white
map[map != "#FFFFFF"] <- "#cecece"  #if not white, set to grey
#blue and grey   #map[map == "#FFFFFF"] <- "#cecece"  #map[map == "#000000"] <- "#f4feff"  #map[map != "#f4feff"] <- "#cecece"  #

class(map) <- c("ggmap", "raster") # correct class, attributes
attr(map, "bb") <- attr_map

dat$col_2lines <- c("Skr??ur",
                     "Vestmannaeyjar",
                     "Grassholm",
                     "Bempton",
                     "Heligoland",
                     "Rouzic",
                     "Great Saltee",
                     "Little Skellig",
                     "Bull Rock",
                     "Lambay",
                     "Alderney",
                     "Ailsa Craig",
                     "Bass Rock",
                     "Funk Is.",
                     "Store Ulv?yhomen",
                     "Storstappen",
                     "Bonaventure Is.",
                     "Sule Skerry",
                     "St. Kilda",
                     "Baccalieu Is.") 

map <- ggmap(map) +
  geom_point(data = dat,aes(Lon,Lat), 
             alpha = 0.5, size = 2) +
  geom_text_repel(data = dat,aes(Lon,Lat, 
            label = col_2lines), size = 5) +
  theme(panel.border = element_rect(colour = "black", fill=NA)) + 
  theme(axis.text=element_text(colour="black")) +
  theme(legend.position = "position_none") +
  theme(text = element_text(size=17)) +
  labs(x="Longitude", y="Latitude"); map

