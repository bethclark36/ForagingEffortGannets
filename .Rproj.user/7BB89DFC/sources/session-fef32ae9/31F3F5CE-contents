#13/11/18 Beth Clark
library(tidyverse) #1.3.0
library(cowplot) #1.0.0
library(ggrepel)#0.8.2
library(MuMIn)#1.43.15
library(lme4)#1.1-21
library(afex)#0.27-2
library(optimx)#2020-4.2
library(car)#3.0-8
library(plotrix)#3.7-7
library(arm)#1.11-2
library(contrast)#0.22
library(DHARMa)#0.2.7
library(ciTools)#0.6.1


rm(list=ls())

ms_theme <- theme_bw()+
  #theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
  theme(text = element_text(size=20)) +
  theme(axis.title.x = element_text(margin = margin(t = 10))) +
  theme(legend.text=element_text(size=15)) +
  theme(axis.text=element_text(colour="black")) 
  #theme(plot.margin=unit(c(0.5,0.5,0.5,0.5),"cm"))

folder <- "C:/Users/potor/Sync/Documents2TB/Analysis/Iceland/Multicolony_comparison/"

dat <- read.csv(paste0(folder,"multicol_by_yr_newdata_capesm.csv"))

dat$sqrt.size. <- NULL
dat$sqrt.size <- sqrt(dat$Size)
#dat$sqrt.size <- sqrt(dat$Size2) #for not combining vestmannaeyjar or alderney
head(dat)
dat$Dur_original <- dat$Dur
dat$Dur <- dat$Dur_original*10

hist(dat$Dur)

#col count v gps year

dat$GPS_year
dat$Year

range(dat$GPS_year)

dat$GPS_year_num <- dat$GPS_year - min(dat$GPS_year) + 1

dat$count_year <- as.numeric(ifelse(dat$Year == "2013/14",2013.5,as.character(dat$Year)))

year_diff <- abs(dat$count_year - dat$GPS_year)

range(year_diff)
mean(year_diff)

plot(dat$Lon, dat$Lat)
cor.test(dat$Lon, dat$Lat)
#correlated, so don't include Lon in models

#dur mods ####

plot(dat$GPS_year_num,dat$Dur)

#drop and order #REML = F
model_drop <- lmer(Dur_original ~ sqrt.size + Lat + GPS_year_num
                   + (1|colony),
                   data = dat, REML = F, na.action = na.fail)
drop1(model_drop,test=F)
plot(simulateResiduals(model_drop))

#to report parameter value  REML = T
model_par_dur <- lmer(Dur_original ~ sqrt.size + Lat + GPS_year_num + (1|colony),
                     data = dat, REML = T, na.action = na.fail)
plot(simulateResiduals(model_par_dur))
summary(model_par_dur)
r.squaredGLMM(model_par_dur)

modeli <- lmer(Dur ~ (1|colony),
                      data = dat, REML = T, na.action = na.fail)
summary(modeli)
4033/(4886+4033)
4886/(4886+4033)

#maxdist mods ####

#drop and order #REML = F
model_drop <- lmer(Maxdist ~ sqrt.size + Lat + GPS_year_num
                   + (1|colony),
                   data = dat, REML = F, na.action = na.fail)
drop1(model_drop,test=F)
plot(simulateResiduals(model_drop))

#to report parameter value  REML = T
model_par_Maxdist <- lmer(Maxdist ~ sqrt.size + Lat + GPS_year_num + (1|colony),
                      data = dat, REML = T, na.action = na.fail)
plot(simulateResiduals(model_par_Maxdist))
summary(model_par_Maxdist)
r.squaredGLMM(model_par_Maxdist)

modeli <- lmer(Maxdist ~ (1|colony),
               data = dat, REML = T, na.action = na.fail)
summary(modeli)
2346/(1023+2346)
1023/(1023+2346)


#Predict latitude dur ####
#use Dur*10 multiply for graph
model_par_dur <- lmer(Dur ~ sqrt.size + Lat + GPS_year_num + (1|colony),
                      data = dat, REML = T, na.action = na.fail)


border <- 1
newdat <- tidyr::expand(data = dat,
                        Lat = seq((min(Lat)-border), 
                                  (max(Lat)+border),length=100),
                        sqrt.size = mean(sqrt.size),
                        GPS_year_num = mean(GPS_year_num)) %>%
  data.frame()

pred <- predict(model_par_dur, newdat, 
                re.form=NA)
pred <- as.data.frame(pred)
newdat$pred <- pred$pred


newdat <- add_ci(newdat,model_par_dur,alpha=0.1,
                 type = "boot", includeRanef = FALSE, nSims = 10000)

dat$col_col <- ifelse(as.character(dat$colony) %in% 
                        c("Ailsa Craig","Baccalieu Island","Bonaventure Island",
                          "Bull Rock","Heligoland","Lambay","Little Skellig",
                          "St Kilda","Sule Skerry"),"grey","black")

dat$col_shape <- ifelse(as.character(dat$colony) %in% 
   c("Ailsa Craig","Baccalieu Island","Bonaventure Island",
     "Bull Rock","Heligoland","Lambay","Little Skellig",
     "St Kilda","Sule Skerry"),16,0)

dat$col_shape <- ifelse(as.character(dat$colony) == 
                        "Alderney",18, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Bass Rock",2, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Bempton",3, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Funk Island",4, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Grassholm",1, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Great Saltee",17, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Rouzic",6, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Skr??ur",5, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Store Ulv?yhomen",25, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Storstappen",8, dat$col_shape)
dat$col_shape <- ifelse(as.character(dat$colony) == 
                          "Vestmannaeyjar",15, dat$col_shape)

head(newdat)
dl3 <-ggplot(newdat, aes(x=Lat, y=pred)) + 
  geom_line()+
  geom_ribbon(aes(ymin = LCB0.05, ymax = UCB0.95), 
              colour = "grey", alpha = 0.2) +  
  geom_point(data = dat, aes(x=Lat, y=Dur),
              shape = dat$col_shape,
                              fill = dat$col_col,
                              color = dat$col_col,
                              size=3.5,stroke=1.1)+
  scale_y_continuous(expand = c(0, 0), limits=c(0, 425)) +
  scale_x_continuous(expand = c(0, 0), 
                     limits=c(min(dat$Lat)- border, 
                              max(dat$Lat)+ border)) +
  ms_theme +
  theme(legend.position = "none") +
  geom_line()+
  theme(axis.title.y = element_blank(),axis.title.x = element_blank());dl3

#Predict size dur ####
border <- 11.74734
newdat <- tidyr::expand(data = dat,
                        sqrt.size = seq(0, 
                        (max(sqrt.size) + border),length=100),
                        Lat = mean(Lat),
                        GPS_year_num = mean(GPS_year_num))

pred <- predict(model_par_dur, newdat, 
                re.form=NA)
pred <- as.data.frame(pred)
newdat$pred <- pred$pred

newdat <- add_ci(newdat,model_par_dur,alpha=0.1,
                 type = "boot", includeRanef = FALSE, nSims = 10000)

ds3 <-ggplot(newdat, aes(x=sqrt.size, y=pred)) + 
  geom_line()+
  geom_ribbon(aes(ymin = LCB0.05, ymax = UCB0.95), 
              colour = "grey", alpha = 0.2) +  
  geom_point(data = dat, aes(x=sqrt.size, y=Dur),
             shape = dat$col_shape,
             fill = dat$col_col,
             color = dat$col_col,
             size=3.5,stroke=1.1)+
  scale_y_continuous(expand = c(0, 0), limits=c(0, 425)) +
  scale_x_continuous(expand = c(0, 0), 
                     limits=c(0, 
                              max(dat$sqrt.size)+ border)) +
  ms_theme +
  theme(legend.position = "none") +
  geom_line()+
  theme(axis.title.y = element_blank(),axis.title.x = element_blank());ds3

plot_grid(ds3,dl3,ncol = 2)

#Predict latitude max ####
border <- 1
newdat <- tidyr::expand(data = dat,
                        Lat = seq((min(Lat)-border), 
                                  (max(Lat)+border),length=100),
                        sqrt.size = mean(sqrt.size)) %>%
  data.frame()

pred <- predict(model_par_max, newdat, 
                re.form=NA)
pred <- as.data.frame(pred)
newdat$pred <- pred$pred

newdat <- add_ci(newdat,model_par_max,alpha=0.1,
                 type = "boot", includeRanef = FALSE, nSims = 10000)

head(newdat)
ml3 <-ggplot(newdat, aes(x=Lat, y=pred)) + 
  geom_line()+
  geom_ribbon(aes(ymin = LCB0.05, ymax = UCB0.95), 
              colour = "grey", alpha = 0.2) +  
  geom_point(data = dat, aes(x=Lat, y=Maxdist),
             shape = dat$col_shape,
             fill = dat$col_col,
             color = dat$col_col,
             size=3.5,stroke=1.1)+
  scale_y_continuous(expand = c(0, 0), limits=c(0, 330)) +
  scale_x_continuous(expand = c(0, 0), 
                     limits=c(min(dat$Lat)- border, 
                              max(dat$Lat)+ border)) +
  ms_theme +
  theme(legend.position = "none") +
  geom_line()+
  theme(axis.title.y = element_blank(),axis.title.x = element_blank());ml3

#Predict size max ####
border <- 11.74734
newdat <- tidyr::expand(data = dat,
                        sqrt.size = seq(0, 
                                        (max(sqrt.size) + border),length=100),
                        Lat = mean(Lat))

pred <- predict(model_par_max, newdat, 
                re.form=NA)
pred <- as.data.frame(pred)
newdat$pred <- pred$pred

newdat <- add_ci(newdat,model_par_max,alpha=0.1,
                 type = "boot", includeRanef = FALSE, nSims = 10000)

ms3 <-ggplot(newdat, aes(x=sqrt.size, y=pred)) + 
  geom_line()+
  geom_ribbon(aes(ymin = LCB0.05, ymax = UCB0.95), 
              colour = "grey", alpha = 0.2) +  
  geom_point(data = dat, aes(x=sqrt.size, y=Maxdist),
             shape = dat$col_shape,
             fill = dat$col_col,
             color = dat$col_col,
             size=3.5,stroke=1.1)+
  scale_y_continuous(expand = c(0, 0), limits=c(0, 330)) +
  scale_x_continuous(expand = c(0, 0), 
                     limits=c(0, 
                              max(dat$sqrt.size)+ border)) +
  ms_theme +
  theme(legend.position = "none") +
  geom_line()+
  theme(axis.title.y = element_blank(),axis.title.x = element_blank());ms3

#plot grids ####
plot_grid(ds3, dl3, ms3, ml3, ncol=2)


png("C:/Users/potor/Sync/Documents2TB/Analysis/Iceland/Multicolony_comparison/newdata/model_by_yr.png",
    width=5000,height=5000,res=400)
plot_grid(ds3, dl3, ms3, ml3, ncol=2)
dev.off()

#no dur cor
plot(dat$GPS_year,dat$Dur)
cor.test(dat$GPS_year,dat$Dur)

#cor for range p=0.01, r = -0.37
plot(dat$GPS_year,dat$Maxdist)
cor.test(dat$GPS_year,dat$Maxdist)


