#Sep 2023 Beth Clark & David Pascall

#Load packages, data and set up ####
library(jtools)
library(survey)
library(tidyverse)
library(DHARMa)

sessionInfo() #The output is below showing the versions of R and rpackages 
              #used when this script was originally run:

#R version 4.3.1 (2023-06-16 ucrt)
#Platform: x86_64-w64-mingw32/x64 (64-bit)
#Running under: Windows 11 x64 (build 22000)

#Matrix products: default

#locale:
#[1] LC_COLLATE=English_United Kingdom.utf8  LC_CTYPE=English_United Kingdom.utf8   
#[3] LC_MONETARY=English_United Kingdom.utf8 LC_NUMERIC=C                           
#[5] LC_TIME=English_United Kingdom.utf8    

#time zone: Europe/London
#tzcode source: internal

#attached base packages:
#[1] grid      stats     graphics  grDevices utils     datasets  methods   base     

#other attached packages:

#other attached packages:
#[1]  DHARMa_0.4.6    lubridate_1.9.3 forcats_1.0.0   stringr_1.5.0   dplyr_1.1.2    
#[6]  purrr_1.0.1     readr_2.1.4     tidyr_1.3.0     tibble_3.2.1    ggplot2_3.4.4  
#[11] tidyverse_2.0.0 survey_4.2-1    survival_3.5-5  Matrix_1.6-1    jtools_2.2.2   

#loaded via a namespace (and not attached):
#[1]  utf8_1.2.3        generics_0.1.3    stringi_1.7.12    lattice_0.21-8    lme4_1.1-34      
#[6]  hms_1.1.3         digest_0.6.33     magrittr_2.0.3    timechange_0.2.0  DBI_1.1.3        
#[11] fansi_1.0.4       pander_0.6.5      scales_1.2.1      cli_3.6.1         mitools_2.4      
#[16] rlang_1.1.1       crayon_1.5.2      munsell_0.5.0     splines_4.3.1     withr_2.5.0      
#[21] tools_4.3.1       tzdb_0.4.0        nloptr_2.0.3      minqa_1.2.5       colorspace_2.1-0 
#[26] boot_1.3-28.1     vctrs_0.6.3       R6_2.5.1          lifecycle_1.0.3   MASS_7.3-60      
#[31] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.3      glue_1.6.2        Rcpp_1.0.11      
#[36] tidyselect_1.2.0  rstudioapi_0.15.0 nlme_3.1-162      compiler_4.3.1   

rm(list=ls())
dat <- read.csv("data_gannet_foraging_by_colony.csv")
head(dat)

dat$sqrt.size <- sqrt(dat$Size)

plot(dat$Lon,dat$Lat)
cor.test(dat$Lon,dat$Lat)

#Survey design set up to use the survey package, which allows for 
#the finite population correction to be applied
dat <- dat[,c("Lat","Lon","sqrt.size","Dur","Maxdist","GPS_n_birds")]
design <- survey::svydesign(ids=~0, fpc=rep(60,nrow(dat)), data = dat)
#60 refers to a maximum possible number of northern gannet colonies worldwide

#duration models ####
fit1<-svyglm(Dur ~ sqrt.size + Lat, design = design)
fit2<-svyglm(Dur ~ sqrt.size, design = design)
fit3<-svyglm(Dur ~ Lat, design = design)

anova(fit1, fit2) #lat effect
anova(fit1, fit3) #size effect

fit4<-svyglm(Dur ~ sqrt.size + Lon, design = design)
fit5<-svyglm(Dur ~ sqrt.size, design = design)

fit6<-svyglm(Dur ~ sqrt.size + Lat + Lon, design = design)

anova(fit4, fit5) #lon effects

anova(fit1,fit6) #lon effect 
anova(fit4,fit6) #lat effect 

#Check residuals for the best model (fit1)
plot(simulateResiduals(fit1))
#DHARMs results are good, but give a warning:
#"fittedModel not in class of supported models. Absolutely no guarantee that this will work!"

#check with a normal lm of the same structure 
fitlm<-lm(Dur ~ sqrt.size + Lat, data = dat)
plot(simulateResiduals(fitlm)) #same result

#record model statistics
summary(fit1) 

jtools::summ(fit0) #size+lat+lon
summ(fit1) #size+lat
summ(fit2) #size
summ(fit3) #lat

summ(fit)

#all
0.62  #adj r2
0.62-0.21 #delta size
0.62-0.54 #delta lat

confint(fit1)

par(mfrow=c(2,2));plot(fit1);par(mfrow=c(1,1))

#max dist ####
fit <- svyglm(Maxdist ~ sqrt.size + Lat + prop_cells, design = design)
fit4 <- svyglm(Maxdist ~ sqrt.size + prop_cells, design = design)

fit0<-svyglm(Maxdist ~ sqrt.size + Lon, design = design)

fit1<-svyglm(Maxdist ~ sqrt.size + Lat, design = design)
fit2<-svyglm(Maxdist ~ sqrt.size, design = design)
fit3<-svyglm(Maxdist ~ Lat  + prop_cells, design = design)

anova(fit1, fit2)
anova(fit1, fit3)

anova(fit0, fit2)

anova(fit, fit4) #lat effect with cells


fitll<-lm(Maxdist ~ sqrt.size + Lat, data = dat)
#plot(fitll)
plot(simulateResiduals(fitll))
par(mfrow=c(2,2));plot(fit1);par(mfrow=c(1,1))

summary(fit1) 
summ(fit1)
summ(fit2)
summ(fit3)

#all
0.72  #adj r2
0.72-0.70 #delta lat
0.72-0.10 #delta size

confint(fit1)

#dist v dur ####
fit1<-svyglm(Maxdist ~ Dur, design = design)
fit2<-svyglm(Maxdist ~ 1, design = design)
anova(fit1,fit2)
summary(fit1)
summ(fit1)


#dat <- subset(dat,GPS_n_birds > 9) ####
dat <- subset(dat,GPS_n_birds > 9) 

dat <- dat[,c("Lat","Lon","sqrt.size","Dur","Maxdist","GPS_n_birds","Lon")]
design <- svydesign(ids=~0, fpc=rep(60,nrow(dat)), data = dat)

#dur 
fit1<-svyglm(Dur ~ sqrt.size + Lat, design = design)
fit2<-svyglm(Dur ~ sqrt.size , design = design)
fit3<-svyglm(Dur ~ Lat , design = design)

anova(fit1, fit2) #lat effect
anova(fit1, fit3) #size effect

fitll<-lm(Dur ~ sqrt.size + Lat, data = dat)
#plot(fitll)
plot(simulateResiduals(fitll))

summary(fit1) 

summ(fit1) #size+lat
summ(fit2) #size
summ(fit3) #lat

#all
0.67  #adj r2
0.67-0.34 #delta size
0.67-0.57 #delta lat

confint(fit1)

par(mfrow=c(2,2));plot(fit1);par(mfrow=c(1,1))

#max dist 
fit1<-svyglm(Maxdist ~ sqrt.size + Lat, design = design)
fit2<-svyglm(Maxdist ~ sqrt.size , design = design)
fit3<-svyglm(Maxdist ~ Lat , design = design)

anova(fit1, fit2)
anova(fit1, fit3)

fitll<-lm(Maxdist ~ sqrt.size + Lat, data = dat)
#plot(fitll)
plot(simulateResiduals(fitll))
par(mfrow=c(2,2));plot(fit1);par(mfrow=c(1,1))

summary(fit1) 
summ(fit1)
summ(fit2)
summ(fit3)

#>9
0.73  #adj r2
0.73-0.72 #delta lat
0.73-0.16 #delta size

confint(fit1)

